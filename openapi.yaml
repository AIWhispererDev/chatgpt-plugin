components:
    examples: {}
    headers: {}
    parameters: {}
    requestBodies: {}
    responses: {}
    schemas:
        CommandResponse:
            properties:
                stderr:
                    type: string
                stdout:
                    type: string
            required:
                - stderr
                - stdout
            type: object
            additionalProperties: false
        ExecuteCommandRequest:
            properties:
                cmd:
                    type: string
                rootdir:
                    type: string
            required:
                - cmd
            type: object
            additionalProperties: false
        Template:
            type: string
            enum:
                - Nodejs
                - Go
                - Bash
                - Rust
                - Python3
                - PHP
                - Java
                - Perl
                - DotNET
        URLResponse:
            properties:
                url:
                    type: string
            required:
                - url
            type: object
            additionalProperties: false
        ReadFileResponse:
            properties:
                content:
                    type: string
            required:
                - content
            type: object
            additionalProperties: false
    securitySchemes: {}
info:
    title: '@e2b/chatgpt-plugin'
    version: 0.1.0
    description: 'e2b ChatGPT Plugin'
    license:
        name: 'SEE LICENSE IN LICENSE'
    contact:
        name: 'FoundryLabs, Inc.'
        email: hello@e2b.dev
        url: 'https://e2b.dev'
openapi: 3.0.0
paths:
    /commands:
        post:
            operationId: ExecuteCommand
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandResponse'
            security: []
            parameters:
                -
                    in: header
                    name: template
                    required: false
                    schema:
                        $ref: '#/components/schemas/Template'
                -
                    in: header
                    name: openai-conversation-id
                    required: true
                    schema:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ExecuteCommandRequest'
    /file:
        get:
            operationId: ReadFile
            responses:
                '200':
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReadFileResponse'
            security: []
            parameters:
                -
                    in: header
                    name: openai-conversation-id
                    required: true
                    schema:
                        type: string
                -
                    in: header
                    name: template
                    required: false
                    schema:
                        $ref: '#/components/schemas/Template'
                -
                    in: query
                    name: path
                    required: true
                    schema:
                        type: string
        put:
            operationId: WriteFile
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    in: header
                    name: openai-conversation-id
                    required: true
                    schema:
                        type: string
                -
                    in: header
                    name: template
                    required: false
                    schema:
                        $ref: '#/components/schemas/Template'
                -
                    in: query
                    name: path
                    required: true
                    schema:
                        type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            properties:
                                content:
                                    type: string
                            required:
                                - content
                            type: object
servers:
    -
        url: 'https://localhost:3000/'
